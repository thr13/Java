스트림은 하나 이상 연결될 수 있는데, 이는 오리지널 스트림 뒤에 필터링 중간 스트림, 매핑 중간 스트림이 연결될 수 있다
이와 같이 스트림이 연결되어 있는 것을 스트림 파이프라인(pipelines)이라고 한다

컬렉션 또는 배열 - [오리지널 스트림] - [필터링 중간 스트림] - [매핑 중간 스트림] - 집계 처리 - 결과
* 필터링 중간 스트림과 매핑 중간 스트림을 중간 처리 라고 부른다
** 집계 처리를 최종 처리 라고 부른다

중간 스트림은 요소를 변환하거나 걸러내는 작업을 수행한다
최종처리는 중간처리에서 정제된 요소를 반복하거나 집계(카운팅, 총합, 평균) 작업을 수행한다

Student 객체를 요소로 가지는 컬렉션에서
Student 스트림을 얻고 중간 처리를 통해
score 스트림으로 변환 후 최종집계처리로 score 평균을 구하는 과정)

List 컬렉션 Student - Student 스트림 - [Student 객체를 score 로 변환(매핑)] - score 스트림 - 평균계산 - 평균점수
* 대괄호 [] 부분은 오리지널 스트림에서 중간처리 과정의 경계

스트림은 메소드 체이닝 패턴을 이용해 간결하게 작성 가능하다
예)
double avg = list.stream()
    .mapToTin(student -> student.getScore())
    .average()
    .getAsDouble();

* 주의:스트림 파이프라인으로 구성할때, 파이프라인 맨 끝에는 반드시 최종 처리 부분이 있어야한다 만약 최종 처리 부분이 없다면 오리지널 및 중간 처리 스트림은 동작하지 않는다
----------------------------------------------------------------------------------------------------
java.util.Collection 패키지 (또는 List, Set 컬렉션 패키지) 에 존재하는 메소드인
stream() 과 parallelStream() 메소드는 Stream<T> 타입 객체를 얻는데 사용된다

stream():
    메소드로 생성된 스트림은 요소를 하나씩 순서대로 처리한다(순차처리),
    단일스레드 처리,
    원본 컬렉션의 순서가 유지되는 경우 스트림 연산의 결과 순서도 보장된다(결과순서보장)

parallelStream():
    메소드로 생성된 스트림은 여러개의 스레드로 나눠서 처리한다(병렬처리),
    멀티스레드 처리,
    병렬로 처리되기 때문에 스트림 연산의 결과 순서가 항상 원본 컬렉션의 순서와 같다고 보장할 수 없다

----------------------------------------------------------------------------------------------------
java.util.Arrays 배열 클래스로부터 stream(T[]) 또는 Stream.of(T[]) 메소드를 사용하여 Stream 객체를 얻을 수 있다

예) 정수형 배열 객체에 steam(int[] 배열변수) 또는 IntStream.of(int[] 배열변수) 메소드 사용시 IntStream 객체를 얻을 수 있다
----------------------------------------------------------------------------------------------------
IntStream 또는 LongStream 의 정적 메소드 range(시작수, 끝수), rangeClosed(시작수, 끝수) 메소드를 이용하여 특정 범위의 정수 스트림(IntStream)을 얻을 수 있다

range() 메소드는 범위내에 끝수를 포함하지 않고
rangeClosed() 메소드는 범위내에 끝수를 포함한다
----------------------------------------------------------------------------------------------------
java.nio.file 패키지 Files 클래스의 lines() 메소드를 이용하여 텍스트 파일을 행 단위로 읽은 다음 스트림 객체로 변환할 수 있다
(단, 사용종료후 stream.close() 메소드를 이용하여 시스템 자원을 반환해야한다)
----------------------------------------------------------------------------------------------------