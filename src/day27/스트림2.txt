스트림은 하나 이상 연결될 수 있는데, 이는 오리지널 스트림 뒤에 필터링 중간 스트림, 매핑 중간 스트림이 연결될 수 있다
이와 같이 스트림이 연결되어 있는 것을 스트림 파이프라인(pipelines)이라고 한다

컬렉션 또는 배열 - [오리지널 스트림] - [필터링 중간 스트림] - [매핑 중간 스트림] - 집계 처리 - 결과
* 필터링 중간 스트림과 매핑 중간 스트림을 중간 처리 라고 부른다
** 집계 처리를 최종 처리 라고 부른다

중간 스트림은 요소를 변환하거나 걸러내는 작업을 수행한다
최종처리는 중간처리에서 정제된 요소를 반복하거나 집계(카운팅, 총합, 평균) 작업을 수행한다

Student 객체를 요소로 가지는 컬렉션에서
Student 스트림을 얻고 중간 처리를 통해
score 스트림으로 변환 후 최종집계처리로 score 평균을 구하는 과정)

List 컬렉션 Student - Student 스트림 - [Student 객체를 score 로 변환(매핑)] - score 스트림 - 평균계산 - 평균점수
* 대괄호 [] 부분은 오리지널 스트림에서 중간처리 과정의 경계

스트림은 메소드 체이닝 패턴을 이용해 간결하게 작성 가능하다
예)
double avg = list.stream()
    .mapToTin(student -> student.getScore())
    .average()
    .getAsDouble();

* 주의:스트림 파이프라인으로 구성할때, 파이프라인 맨 끝에는 반드시 최종 처리 부분이 있어야한다 만약 최종 처리 부분이 없다면 오리지널 및 중간 처리 스트림은 동작하지 않는다
----------------------------------------------------------------------------------------------------
