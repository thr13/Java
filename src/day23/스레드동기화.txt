멀티 스레드는 하나의 객체를 공유해서 작업할 수도 있다 그리고 다른 스레드에 의해 객체 내부 데이터가 변경될 수 있다
만약 스레드가 사용 중인 객체를 다른 스레드가 변경 못하게 할려면 스레드 작업이 끝날떄까지 객체에 잠금을 걸면 된다
이것을 구현하기 위해 자바는 동기화(Synchronized)메소드와 블록을 제공한다

객체 내부에 동기화 메소드와 동기화 블록이 여러개가 있다면 스레드가 이들 중 하나를 실행할 때 다른 스레드가 이 동기화 메소드, 블록을 실행 할 수 없다
(단, 일반 메소드는 실행 가능함)

동기화가 된다면 하나의 스레드만 실행이 가능하다
----------------------------------------------------------------------
<동기화 메소드 선언>
동기화 메소드는 synchronized 키워드를 이용해서 선언 할 수 있다 그리고 synchronized 키워드는 인스턴스와 정적 메소드 어디든 붙일 수 있다

접근제어자 synchronized 리턴타입 메소드이름(매개변수) {
    // 단 하나의 스레드만 실행되는 영역
}

스레드가 동기화 메소드를 실행한다면, 즉시 객체는 잠금(lock) 이 일어나고, 메소드 실행이 끝나면 잠금이 풀린다(unlock)
만약 메소드 전체가 아닌 일부 영역을 실행할 때만 잠금을 걸고 싶다면 아래와 같이 동기화 블록을 만들 수 있다
예)
public void method() {
    // 여러 스레드가 실행할 수 있는 영역

    synchronized(공유객체) {
        // 단 하나의 스레드만 실행되는 영역 - 동기화 블록
    }

    // 여러 스레드가 실행할 수 있는 영역
}
