형식(Format) 클래스는 숫자나 날짜를 임의의 문자열로 변환하는 기능을 제공한다

Format 클래스는 java.text 패키지에 포함되어 있다
Format 클래스 목록으로는 DecimalFormat 과 SimpleDateFormat 가 있다

1. DecimalFormat
    - 숫자를 형식화된 문자열로 변환
    - 매개변수로 사용된 기호에 따라서 문자열 패턴이 달라진다

기호 | 의미 | 패턴 예 | 변환 결과 예
0 | 10진수(빈자리는 0으로 채움) | 00000.0000 | 00123.4500
# | 10진수(빈자리는 채우지않음) | ###.## | 123.45
. | 소수점 | #.0 | 123.4
+ 또는 - | 양수, 음수 기호추가 | +#.0 또는 -#.0 | +123 또는 -123
, | 단위 구분 | #,###.0 | 1,234,567.8
E | 지수문자 | 0.0E0 | 1.2E6
; | 양수와 음수의 패턴을 모두 기술할 경우 패턴구분자 | +#,### ; -#,### | +1,234,567(양수일 경우) 또는 -1,234,567(음수일 경우)
% | %문자 | #.# % | 1234 %
\u00A4 | 통화기호 | \u00A4 #,### | ₩1,234,567

DecimalFormat 객체를 패턴으로 생성하고 .format() 메소드를 사용할 경우 패턴에 따른 문자열 형식을 얻을 수 있다

2. SimpleDateFormat - 날짜를 형식화된 문자열로 변환

패턴문자 | 의미
y | 년
M | 월
d | 일
D | 월 구분이 없는 일 (1 부터 365 까지)
E | 요일
a | 오전/오후 (즉, AM/PM)
w | 해당 년의 몇 번째 주인지
W | 해당 월의 몇 번째 주인지
H | 시 (0시 부터 23시)
h | 시 (1시 부터 12시)
K | 시 (0시 부터 11시)
k | 시 (1시 부터 24시)
m | 분
s | 초
S | 밀리세컨드(1/1000 초)

.format(Date 객체) 메서드를 사용해서 패턴과 동일한 문자열을 얻을 수 있다