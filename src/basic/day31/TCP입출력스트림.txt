<입출력 스트림으로 데이터 주고받기>
클라이언트가 연결 요청(connect())을 하고 서버가 연결 수락(accept())을 했다면

클라이언트와 서버가 각각 가지고 있는 Socket 객체로부터 입력 스트림(InputStream)과 출력 스트림(OutputStream)을 얻을 수 있다
(즉, 클라이언트 Socket 도 입출력스트림을 가지고 있고 서버 Socket 도 입출력 스트림을 가지고 있다 단지 서로 스트림 방향이 반대일뿐)

예) Socket 객체로부터 입출력 스트림 얻기
InputStream is = socket.getInputStream();
OutputStream os = socket.getOutputStream();
----------------------------------------------------------------------------------------------------
<데이터 보내기>
상대방에게 데이터를 보낼 때, 보낼 데이터를 byte[] 배열로 생성하고 이것을 OutputStream 객체의 write() 메소드에 매개값으로 넣고 호출하면 된다

예) 문자열로부터 UTF-8 로 인코딩한 바이트 배열 데이터를 상대방에게 전송하기
String data = "보낼 데이터";
byte[] bytes = data.getByte("UTF-8");
OutputStream os = socket.getOutputStream();
os.write(bytes);
os.flush();

보조스트림 DataOutputStream 도 연결이 가능하다
String data = "보낼 데이터";
DataOutputStream dos = new DataOutputStream(socket.getOutputStream());
dos.writeUTF(data);
dos.flush();
----------------------------------------------------------------------------------------------------
<데이터 받기>
상대방이 보낸 데이터를 받기 위해선, 받을 데이터를 저장할 byte[] 배열을 생성하고 이를 매개값으로 하는 InputStream 클래스의 read() 메소드를 호출하면 된다
read(byte[]배열) 메소드는 읽은 데이터를 byte[] 배열에 저장하고 읽은 바이트 수를 정수형으로 반환한다

예) 받는 데이터가 문자열인 경우, byte[] 배열을 UTF-8 로 디코딩해서 문자열 얻기
byte[] bytes = new byte[1024];
InputStream is = socket.getInputStream();
int num = is.read(bytes);
String data = new String(bytes, 0, num, "UTF-8");

보조 스트림 DataInputStream 도 연결이 가능하다(단, 상대방이 DataOutputStream 으로 문자열을 보낸 경우에만 가능함)
DataInputStream dis = new DataInputStream(socket.getInputStream());
String data = dis.readUTF();
----------------------------------------------------------------------------------------------------
* TCP 클라이언트가 서버로 보낸 메시지를 다시 클라이언트로 돌려보내는 걸 에코(Echo)서버 라고 한다


