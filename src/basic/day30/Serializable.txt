Java 에서 Serializable 는 객체를 직렬화 할 수 있다는 의미이다
Java 는 Serializable 인터페이스를 구현한 클래스만 직렬화 할 수 있도록 제한한다
* Serializable 인터페이스는 java.io 패키지에 존재함

Serializable 인터페이스는 멤버가 없는 빈 인터페이스지만 객체를 직렬화 할 수 있다고 표시하는 역할을 한다

객체가 직렬화될 때 인스턴스 필드 값은 직렬화 대상이지만, 정적(static) 필드값과 transient 로 선언된 필드 값은 직렬화에서 제외되므로 출력되지 않는다
* transient 는 직렬화(Serialization) 과정에서 특정 필드를 제외하고 싶을때 사용하는 필드에 대한 제어자(modifier) 이다
(즉, 해당 필드는 객체가 직렬화될때 바이트 스트림에 포함되지 않는다 마찬가지로 역직렬화될때 transient 필드값은 기본값으로 초기화된다)

** 객체가 직렬화되면 바이트 데이터가 일렬로 늘어서 있으므로 필드도 선언된 순서대로 일렬화된다 그리고 static 키워드나 transient 키워드로 선언된 필드들은 직렬화에서 제외된다
----------------------------------------------------------------------------------------------------
<serialVersionUID 필드>
일반적으로 직렬화할 때 사용된 클래스와 역직렬화할 때 사용된 클래스는 동일한 클래스여야 한다
만약 클래스 이름이 같더라도 내용이 다르면 역직렬화에 실패한다

이때, 클래스 내용이 다르더라도 직렬화된 필드를 공통으로 포함하고 있다면 역직렬화할 수 있는 방법이 있는데
두 클래스가 동일한 serialVersionUID 상수값을 가지고 있으면 된다

예) serialVersionUID 상수
private static final long serialVersionUID = -62284561026719240L;

* serialVersionUID 는 클래스마다 다른 유일한 값을 갖도록 하는게 좋다
----------------------------------------------------------------------------------------------------