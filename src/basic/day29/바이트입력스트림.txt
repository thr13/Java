바이트 스트림: 그림, 멀티미디어 문자 등 모든 종류의 데이터를 입출력할때 사용
----------------------------------------------------------------------------------------------------
InputStream 은 바이트 입력 스트림의 최상위 클래스 이자 추상클래스이다
모든 바이트 입력 스트림은 InputStream 클래스를 상속받아서 만들어진다

바이트 입력 스트림의 하위 클래스로는 FileInputStream, BufferedInputStream, DataInputStream 등이 있다

InputStream 클래스의 주요 메소드로는 read(), read(byte[] bytes), close() 등이 있다

read(): 1 byte 를 읽은 후 읽은 바이트를 반환(int 타입 즉, 4byte 을 리턴하지만, 4byte 중 끝 부분의 1byte 에만 데이터가 들어있다)
read(byte[] bytes): 읽어온 바이트를 매개값으로 주어진 배열에 순서대로 저장 후 읽은 바이트 수를 리턴
close(): 입력 스트림을 닫고 사용한 메모리를 해제
----------------------------------------------------------------------------------------------------
read() 메소드로 더 이상 입력 스트림으로부터 바이트를 읽을 수 없다면 read() 메소드는 -1 을 리턴한다
이를 이용하여 메소드로 읽을 수 있는 마지막 바이트까지 반복해서(-1을 반환할떄까지) 한 바이트씩 읽을 수 있다

InputStream 도 마찬가지로 주어진 파일이 존재하지 않을 경우 FileNotFoundException 을 발생시킨다
----------------------------------------------------------------------------------------------------
<바이트 배열 읽기>
read(byte[] bytes) 메소드는 입력 스트림으로부터 주어진 배열의 길이만큼 바이트를 읽고,
배열에 저장한 다음 읽은 바이트 수를 리턴한다
이 메소드도 마찬가지로 더 이상 입력 스트림으로부터 바이트를 읽을 수 없다면 -1 을 리턴한다

* 많은 양의 바이트를 읽을 때는 read(byte[] bytes) 메소드를 사용하는게 좋다
입력 스트림으로부터 100 개의 바이트가 들어온다면 read() 메소드는 100 번을 반복해서 읽어야 하지만
read(byte[] bytes) 메소드는 한 번 읽을 때 배열 길이만큼 읽기 떄문에 읽는 횟수가 현저히 줄어든다
----------------------------------------------------------------------------------------------------
* JAVA 9 버전부턴 더 편리하게 입력 스트림에서 출력 스트림으로 바이트를 복사하는 transferTo() 메소드가 InputStream 에 추가되었다
----------------------------------------------------------------------------------------------------
