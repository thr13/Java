스트림 처리(stream processing)
스트림이란, 한 번에 한 개씩 만들어지는 연속적인 데이터 항목들의 모임이다
이론적으로 프로그램은 입력 스트림에서 데이터를 한 개씩 읽어 들이며, 출력 스트림은 데이터를 한 개씩 기록한다

자바 8 버전에서 java.util.stream 패키지에 스트림 API 가 추가되었다
스트림 API 를 이용해 스트림 파이프라인을 이용해 입력 부분을 여러 CPU 코어에 쉽게 할당할 수 있다
스레드처럼 복잡한 작업을 사용하지 않으면서도 공짜로 병렬성을 얻을 수 있다

메서드를 다른 메서드의 인수를 넘겨주는 기능을 동작 파라미터화(behavior parameterization)라고 하는데
스트림 API 는 연산의 동작을 파라미터화할 수 있는 코드를 전달하는 것을 기초로 한다

스트림 메서드로 전달하는 코드는 다른 코드와 동시에 실행하더라도 안전하게 실행될 수 있어야 한다
일반적으로 다른 코드와 동시에 실행하더라도 안전하게 실행할 수 있는 코드를 만들려면 '공유된 가변 데이터(shared mutable data)'에 접근 하지 않아야 한다
이런 함수를 순수(pure)함수, 부작용 없는(side-effect-free) 함수, 상태 없는(stateless)함수라 부른다
그러나 공유된 변수나 객체가 있으면 병렬성에 문제가 발생한다

자바 8 스트림을 이용하면 기존 자바 스레드 API 보다 쉽게 병렬성을 활용할 수 있다
다중 프로세싱 코어에서 synchronized 를 사용하면 생각보다 비용이 클 수 있다
* 일반적으로 synchronized 는 시스템 성능에 악영향을 미친다

공유되지 않은 가변 데이터(no shared mutable data), 메서드, 함수 코드를 다른 메서드로 전달하는 두 가지 기능은
함수형 프로그래밍 패러다임의 핵심적인 사항이다
반면에 명령형 프로그래밍 imperative programming 패러다임은 일련의 가변 상태의 프로그램을 정의한다
공유되지 않은 가변 데이터 요구사항이란, 인수를 결과로 변환하는 기능과 관련된다
즉, 이 요구사항은 수학적인 함수처럼 함수가 정해진 기능만 수행하며 겉으로 보이는 다른 부작용은 일으키지 않음을 의미한다

자바의 함수는 수학적인 함수처럼 사용되며 부작용을 일으키지 않는 함수를 의미한다
자바8 에서 함수를 새로운 "값의 형식"으로 추가했다
자바 프로그램에서 조작할 수 있는 값으로는 기본값, 객체(객체의 참조), new 또는 팩토리 메서드 또는 라이브러리 함수를 이용해서 객체의 값을 얻을 수 있다
객체의 참조는 인스턴스(instance)를 가르킨다

프로그래밍 언어의 핵심은 값을 변경하는 것 이다
전통적으로 프로그래밍 언어에서 이 값을 일급(first-class)값 또는 시민(citizens)이라고 부른다
자바 프로그래밍 언어의 다양한 구조체(메서드, 클래스 등) 값의 구조를 표현하는데 도움이 될 수 있다
그러나 프로그램이 실행되는 동안 이런 구조체를 자유롭게 전달할 수 없다 이렇게 전달할 수 없는 구조체는 이급 시민이다
즉, 메서드, 클래스 등은 이급 자바 시민에 해당된다
---
자바8 에서 메서드를 값으로 취급할 수 있는 기능이 존재한다
첫 번쨰로 메서드 참조(method reference)가 있다
예를 들어 디렉토리에 모든 숨겨진 파일을 필터링한다고 가정할 때, FileFilter 객체 내부에 위치한 isHidden 의 결과를 File.listFiles 메서드로 전달하는 방법으로 숨겨진 파일을 필터링 할 수 있다

File[] hiddenFiles = new File(".").listFiles(new FileFilter() {
    public boolean accept(File file) {
        return file.isHidden();
    }
}

그런데 이 코드는 각 행이 무슨 작업을 하는지 투명하지 않다 File 클래스에는 이미 isHidden 이라는 메서드가 있는데
굳이 FileFilter 로 isHidden 을 복잡하게 감싼 다음에 FileFilter 를 인스턴스화 해야할까?

자바8 에서는 아래처럼 간단히 코드를 구현할 수 있다
File[] hiddenFiles = new File(".").listFiles(File::isHidden);

이미 isHidden 이라는 함수는 준비되어 있으므로 자바8 의 메서드 참조(method reference)는
:: (이 메서드를 값으로 사용하라는 의미)를 이용해 listFiles 에 직접 전달할 수 있다

자바8 에서는 더 이상 메서드가 이급 시민이 아닌 일급 시민이 된거나 다름없다
기존에 new 로 객체 참조(object reference)를 생성한 것를 이용해서 객체를 이리저리 주고받았던 것처럼
자바8 에서는 File::isHidden 처럼 메서드 참조를 만들어 전달할 수 있게 되었다

자바8 에서는 기명(named) 메서드를 일급값으로 취급할 뿐 아니라 람다(또는 익명함수(anonymous functions)를 포함해서 함수도 값으로 취급할 수 있다
람다 문법 형식으로 구현된 프로그램을 함수형 프로그래밍, 즉 '함수를 일급값으로 넘겨주는 프로그램을 구현한다' 라고 한다
---
특정 항목을 선택해서 반환하는 동작을 필터(filter)라고 한다

Predicate 는 java.util.function 패키지에 존재한다
프레디케이트(Predicate)는 인수로 값을 받아 true 나 false 를 반환하는 함수를 의미한다