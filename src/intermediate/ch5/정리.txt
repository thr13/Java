<5.9 정리>
스트림 API 를 이용하면 복잡한 데이터 처리 질의를 표현할 수 있다
filter, distinct, takeWhile, dropWhile, skip, limit 메서드로 스트림을 필터링하거나 자를 수 있다
소스가 정렬되어 있다면 takeWhile 과 dropWhile 메소드를 효과적으로 사용할 수 있다
map, flatMap 메서드로 스트림의 요소를 추출하거나 변환해서 스트림을 생성할 수 있다
findFirst, findAny 메서드로 스트림의 요소를 검색할 수 있다
allMatch, nonMatch, anyMatch 메서드를 이용해 주어진 프레디케이트와 일치하는 요소를 스트림에서 검색할 수 있다
그리고 이 메서드들은 스트림 쇼트 서킷 특징을 가진다(즉, 결과를 찾는 즉시 반환하고 전체 스트림을 처리하지 않음)
reduce 메서드로 스트림의 모든 요소를 반복 조합하며 값을 도출할 수 있다
filter, map 등은 상태를 저장하지 않는 상태 없는 연산(stateless operation)이다
reduce 같은 연산은 값을 계산하는데 필요한 상태를 저장한다 그리고 sorted, distinct 등의 메서드는 새로운 스트림을 반환하기 앞서 스트림의 모든 요소를 버퍼에 저장해야 한다
이런 메서드를 상태 있는 연산(stateful operation)이라고 한다
IntStream, DoubleStream, LongStream 등 기본형 특화 스트림이다
컬렉션뿐만 아니라 값, 배열, 파일, iterate 와 generate 같은 메서드로도 스트림을 만들 수 있다
무한한 개수의 요소를 가진 스트림을 무한 스트림이라고 한다