<데이터 읽기>
PreparedStatement 를 생성할 떄 executeUpdate() 를 호출하지만,
데이터를 가져오는 SELECT 문일 경우에는 executeQuery() 메소드를 호출해야 한다.

executeQuery() 메소드는 가져온 데이터를 ResultSet 에 저장하고 리턴한다
예) ResultSet rs = pstmt.executeQuery();
----------------------------------------------------------------------------------------------------
<ResultSet 구조>
ResultSet 은 SELECT 문으로 가져온 데이터 행의 집합이다
예) userid, username, userage 컬럼으로 구성된 ResultSet 을 리턴하는 SELECT 문
SELECT userid, username, userage FROM users

ResultSet 의 내부 구조는 SELECT 문에 기술된 컬럼 이름, 순번 을 속성으로 가지며
최초 커서위치(beforeFirst 행)와 마지막 행(afterLast 행)은 데이터가 없다
그리고 커서위치 다음 행에 데이터가 존재할 경우 next() 메소드는 true 를 반환한다(afterLast 행은 false 반환)

ResultSet 의 특징은 커서(cursor)가 있는 행의 데이터만 읽을 수 있다
* 커서는 행을 가르키는 포인터를 의미함
실제 가져온 데이터 행의 앞,뒤는 beforeFirst 행과 afterLast 행이 붙는데 최초 커서는 beforeFirst 를 가르킨다
만약 SELECT 문으로 가져온 데이터 행이 없다면 beforeFirst 행과 afterLast 행이 붙어있기 떄문에 next() 메소드의 결과는 false 가 된다

일반적으로 SELECT 문은 기본키(Primary Key)를 조건으로 데이터를 가져온다

ResultSet 을 더 이상 사용하지 않을 경우 close() 메소드를 호출해서 ResultSet 이 사용한 메모리를 해제하는 것이 좋다
----------------------------------------------------------------------------------------------------
<데이터 행 읽기>
커서가 있는 데이터 행에서 각 컬럼 값은 getter 메소드로 읽을 수 있다(데이터 타입에 따라서 getXxx())
getter 메소드는 매개값으로 컬럼의 이름 또는 컬럼의 순번을 줄 수 있다(ResultSet 은 컬럼 순번이 1번부터 시작)

예) 컬럼 이름으로 데이터 행 읽기
String userId = rs.getString("userid");

예) 컬럼 순번으로 읽기
String userId = rs.getString(1);

만약 SELECT 문에 연산식이나 함수 호출이 포함되어 있다면 컬럼 이름 대신, 컬럼 순번으로 읽어야 한다(별명(alias)가 있다면 별명이 곧 컬럼 이름이 된다)
예) SELECT userid, userage -1 FROM users 문으로 컬럼명으로 사용하기 힘들 경우
String userId = rs.getString("userid");
int userAge = rs.getInt(2);
----------------------------------------------------------------------------------------------------